// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package de.computerlyrik.lf.webapp;

import de.computerlyrik.lf.webapp.Area;
import de.computerlyrik.lf.webapp.Delegation;
import de.computerlyrik.lf.webapp.Privilege;
import de.computerlyrik.lf.webapp.Unit;
import de.computerlyrik.lf.webapp.UnitSetting;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.validation.constraints.NotNull;

privileged aspect Unit_Roo_DbManaged {
    
    @OneToMany(mappedBy = "unitId", cascade = CascadeType.ALL)
    private Set<Area> Unit.areas;
    
    @OneToMany(mappedBy = "unitId", cascade = CascadeType.ALL)
    private Set<Delegation> Unit.delegations;
    
    @OneToMany(mappedBy = "unitId", cascade = CascadeType.ALL)
    private Set<Privilege> Unit.privileges;
    
    @OneToMany(mappedBy = "parentId", cascade = CascadeType.ALL)
    private Set<Unit> Unit.units;
    
    @OneToMany(mappedBy = "unitId", cascade = CascadeType.ALL)
    private Set<UnitSetting> Unit.unitSettings;
    
    @ManyToOne
    @JoinColumn(name = "parent_id", referencedColumnName = "id", insertable = false, updatable = false)
    private Unit Unit.parentId;
    
    @Column(name = "active")
    @NotNull
    private boolean Unit.active;
    
    @Column(name = "name")
    @NotNull
    private String Unit.name;
    
    @Column(name = "description")
    @NotNull
    private String Unit.description;
    
    @Column(name = "member_count")
    private Integer Unit.memberCount;
    
    @Column(name = "text_search_data")
    private String Unit.textSearchData;
    
    public Set<Area> Unit.getAreas() {
        return areas;
    }
    
    public void Unit.setAreas(Set<Area> areas) {
        this.areas = areas;
    }
    
    public Set<Delegation> Unit.getDelegations() {
        return delegations;
    }
    
    public void Unit.setDelegations(Set<Delegation> delegations) {
        this.delegations = delegations;
    }
    
    public Set<Privilege> Unit.getPrivileges() {
        return privileges;
    }
    
    public void Unit.setPrivileges(Set<Privilege> privileges) {
        this.privileges = privileges;
    }
    
    public Set<Unit> Unit.getUnits() {
        return units;
    }
    
    public void Unit.setUnits(Set<Unit> units) {
        this.units = units;
    }
    
    public Set<UnitSetting> Unit.getUnitSettings() {
        return unitSettings;
    }
    
    public void Unit.setUnitSettings(Set<UnitSetting> unitSettings) {
        this.unitSettings = unitSettings;
    }
    
    public Unit Unit.getParentId() {
        return parentId;
    }
    
    public void Unit.setParentId(Unit parentId) {
        this.parentId = parentId;
    }
    
    public boolean Unit.isActive() {
        return active;
    }
    
    public void Unit.setActive(boolean active) {
        this.active = active;
    }
    
    public String Unit.getName() {
        return name;
    }
    
    public void Unit.setName(String name) {
        this.name = name;
    }
    
    public String Unit.getDescription() {
        return description;
    }
    
    public void Unit.setDescription(String description) {
        this.description = description;
    }
    
    public Integer Unit.getMemberCount() {
        return memberCount;
    }
    
    public void Unit.setMemberCount(Integer memberCount) {
        this.memberCount = memberCount;
    }
    
    public String Unit.getTextSearchData() {
        return textSearchData;
    }
    
    public void Unit.setTextSearchData(String textSearchData) {
        this.textSearchData = textSearchData;
    }
    
}
