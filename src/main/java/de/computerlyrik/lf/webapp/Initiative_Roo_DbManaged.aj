// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package de.computerlyrik.lf.webapp;

import de.computerlyrik.lf.webapp.Battle;
import de.computerlyrik.lf.webapp.DirectSupporterSnapshot;
import de.computerlyrik.lf.webapp.Draft;
import de.computerlyrik.lf.webapp.Event;
import de.computerlyrik.lf.webapp.Initiative;
import de.computerlyrik.lf.webapp.InitiativeSetting;
import de.computerlyrik.lf.webapp.Initiator;
import de.computerlyrik.lf.webapp.Issue;
import de.computerlyrik.lf.webapp.Member;
import de.computerlyrik.lf.webapp.Suggestion;
import de.computerlyrik.lf.webapp.Vote;
import java.util.Calendar;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.validation.constraints.NotNull;
import org.springframework.format.annotation.DateTimeFormat;

privileged aspect Initiative_Roo_DbManaged {
    
    @ManyToMany
    @JoinTable(name = "ignored_initiative", joinColumns = { @JoinColumn(name = "initiative_id", nullable = false) }, inverseJoinColumns = { @JoinColumn(name = "member_id", nullable = false) })
    private Set<Member> Initiative.members;
    
    @OneToMany(mappedBy = "initiative", cascade = CascadeType.ALL)
    private Set<Battle> Initiative.battles;
    
    @OneToMany(mappedBy = "initiative1", cascade = CascadeType.ALL)
    private Set<Battle> Initiative.battles1;
    
    @OneToMany(mappedBy = "initiative", cascade = CascadeType.ALL)
    private Set<DirectSupporterSnapshot> Initiative.directSupporterSnapshots;
    
    @OneToMany(mappedBy = "initiativeId", cascade = CascadeType.ALL)
    private Set<Draft> Initiative.drafts;
    
    @OneToMany(mappedBy = "initiative", cascade = CascadeType.ALL)
    private Set<Event> Initiative.events;
    
    @OneToMany(mappedBy = "suggestedInitiativeId", cascade = CascadeType.ALL)
    private Set<Initiative> Initiative.initiatives;
    
    @OneToMany(mappedBy = "initiativeId", cascade = CascadeType.ALL)
    private Set<InitiativeSetting> Initiative.initiativeSettings;
    
    @OneToMany(mappedBy = "initiativeId", cascade = CascadeType.ALL)
    private Set<Initiator> Initiative.initiators;
    
    @OneToMany(mappedBy = "initiativeId", cascade = CascadeType.ALL)
    private Set<Suggestion> Initiative.suggestions;
    
    @OneToMany(mappedBy = "initiative", cascade = CascadeType.ALL)
    private Set<Vote> Initiative.votes;
    
    @ManyToOne
    @JoinColumn(name = "suggested_initiative_id", referencedColumnName = "id", insertable = false, updatable = false)
    private Initiative Initiative.suggestedInitiativeId;
    
    @ManyToOne
    @JoinColumn(name = "issue_id", referencedColumnName = "id", nullable = false)
    private Issue Initiative.issueId;
    
    @ManyToOne
    @JoinColumn(name = "revoked_by_member_id", referencedColumnName = "id")
    private Member Initiative.revokedByMemberId;
    
    @Column(name = "name")
    @NotNull
    private String Initiative.name;
    
    @Column(name = "polling")
    @NotNull
    private boolean Initiative.polling;
    
    @Column(name = "discussion_url")
    private String Initiative.discussionUrl;
    
    @Column(name = "created", updatable = false)
    @NotNull
    @Temporal(TemporalType.TIMESTAMP)
    @DateTimeFormat(style = "MM")
    private Calendar Initiative.created = java.util.Calendar.getInstance();
    
    @Column(name = "revoked")
    @Temporal(TemporalType.TIMESTAMP)
    @DateTimeFormat(style = "MM")
    private Calendar Initiative.revoked;
    
    @Column(name = "admitted")
    private Boolean Initiative.admitted;
    
    @Column(name = "supporter_count")
    private Integer Initiative.supporterCount;
    
    @Column(name = "informed_supporter_count")
    private Integer Initiative.informedSupporterCount;
    
    @Column(name = "satisfied_supporter_count")
    private Integer Initiative.satisfiedSupporterCount;
    
    @Column(name = "satisfied_informed_supporter_count")
    private Integer Initiative.satisfiedInformedSupporterCount;
    
    @Column(name = "positive_votes")
    private Integer Initiative.positiveVotes;
    
    @Column(name = "negative_votes")
    private Integer Initiative.negativeVotes;
    
    @Column(name = "direct_majority")
    private Boolean Initiative.directMajority;
    
    @Column(name = "indirect_majority")
    private Boolean Initiative.indirectMajority;
    
    @Column(name = "schulze_rank")
    private Integer Initiative.schulzeRank;
    
    @Column(name = "better_than_status_quo")
    private Boolean Initiative.betterThanStatusQuo;
    
    @Column(name = "worse_than_status_quo")
    private Boolean Initiative.worseThanStatusQuo;
    
    @Column(name = "reverse_beat_path")
    private Boolean Initiative.reverseBeatPath;
    
    @Column(name = "multistage_majority")
    private Boolean Initiative.multistageMajority;
    
    @Column(name = "eligible")
    private Boolean Initiative.eligible;
    
    @Column(name = "winner")
    private Boolean Initiative.winner;
    
    @Column(name = "rank", unique = true)
    private Integer Initiative.rank;
    
    @Column(name = "text_search_data")
    private String Initiative.textSearchData;
    
    public Set<Member> Initiative.getMembers() {
        return members;
    }
    
    public void Initiative.setMembers(Set<Member> members) {
        this.members = members;
    }
    
    public Set<Battle> Initiative.getBattles() {
        return battles;
    }
    
    public void Initiative.setBattles(Set<Battle> battles) {
        this.battles = battles;
    }
    
    public Set<Battle> Initiative.getBattles1() {
        return battles1;
    }
    
    public void Initiative.setBattles1(Set<Battle> battles1) {
        this.battles1 = battles1;
    }
    
    public Set<DirectSupporterSnapshot> Initiative.getDirectSupporterSnapshots() {
        return directSupporterSnapshots;
    }
    
    public void Initiative.setDirectSupporterSnapshots(Set<DirectSupporterSnapshot> directSupporterSnapshots) {
        this.directSupporterSnapshots = directSupporterSnapshots;
    }
    
    public Set<Draft> Initiative.getDrafts() {
        return drafts;
    }
    
    public void Initiative.setDrafts(Set<Draft> drafts) {
        this.drafts = drafts;
    }
    
    public Set<Event> Initiative.getEvents() {
        return events;
    }
    
    public void Initiative.setEvents(Set<Event> events) {
        this.events = events;
    }
    
    public Set<Initiative> Initiative.getInitiatives() {
        return initiatives;
    }
    
    public void Initiative.setInitiatives(Set<Initiative> initiatives) {
        this.initiatives = initiatives;
    }
    
    public Set<InitiativeSetting> Initiative.getInitiativeSettings() {
        return initiativeSettings;
    }
    
    public void Initiative.setInitiativeSettings(Set<InitiativeSetting> initiativeSettings) {
        this.initiativeSettings = initiativeSettings;
    }
    
    public Set<Initiator> Initiative.getInitiators() {
        return initiators;
    }
    
    public void Initiative.setInitiators(Set<Initiator> initiators) {
        this.initiators = initiators;
    }
    
    public Set<Suggestion> Initiative.getSuggestions() {
        return suggestions;
    }
    
    public void Initiative.setSuggestions(Set<Suggestion> suggestions) {
        this.suggestions = suggestions;
    }
    
    public Set<Vote> Initiative.getVotes() {
        return votes;
    }
    
    public void Initiative.setVotes(Set<Vote> votes) {
        this.votes = votes;
    }
    
    public Initiative Initiative.getSuggestedInitiativeId() {
        return suggestedInitiativeId;
    }
    
    public void Initiative.setSuggestedInitiativeId(Initiative suggestedInitiativeId) {
        this.suggestedInitiativeId = suggestedInitiativeId;
    }
    
    public Issue Initiative.getIssueId() {
        return issueId;
    }
    
    public void Initiative.setIssueId(Issue issueId) {
        this.issueId = issueId;
    }
    
    public Member Initiative.getRevokedByMemberId() {
        return revokedByMemberId;
    }
    
    public void Initiative.setRevokedByMemberId(Member revokedByMemberId) {
        this.revokedByMemberId = revokedByMemberId;
    }
    
    public String Initiative.getName() {
        return name;
    }
    
    public void Initiative.setName(String name) {
        this.name = name;
    }
    
    public boolean Initiative.isPolling() {
        return polling;
    }
    
    public void Initiative.setPolling(boolean polling) {
        this.polling = polling;
    }
    
    public String Initiative.getDiscussionUrl() {
        return discussionUrl;
    }
    
    public void Initiative.setDiscussionUrl(String discussionUrl) {
        this.discussionUrl = discussionUrl;
    }
    
    public Calendar Initiative.getCreated() {
        return created;
    }
    
    public void Initiative.setCreated(Calendar created) {
        this.created = created;
    }
    
    public Calendar Initiative.getRevoked() {
        return revoked;
    }
    
    public void Initiative.setRevoked(Calendar revoked) {
        this.revoked = revoked;
    }
    
    public Boolean Initiative.getAdmitted() {
        return admitted;
    }
    
    public void Initiative.setAdmitted(Boolean admitted) {
        this.admitted = admitted;
    }
    
    public Integer Initiative.getSupporterCount() {
        return supporterCount;
    }
    
    public void Initiative.setSupporterCount(Integer supporterCount) {
        this.supporterCount = supporterCount;
    }
    
    public Integer Initiative.getInformedSupporterCount() {
        return informedSupporterCount;
    }
    
    public void Initiative.setInformedSupporterCount(Integer informedSupporterCount) {
        this.informedSupporterCount = informedSupporterCount;
    }
    
    public Integer Initiative.getSatisfiedSupporterCount() {
        return satisfiedSupporterCount;
    }
    
    public void Initiative.setSatisfiedSupporterCount(Integer satisfiedSupporterCount) {
        this.satisfiedSupporterCount = satisfiedSupporterCount;
    }
    
    public Integer Initiative.getSatisfiedInformedSupporterCount() {
        return satisfiedInformedSupporterCount;
    }
    
    public void Initiative.setSatisfiedInformedSupporterCount(Integer satisfiedInformedSupporterCount) {
        this.satisfiedInformedSupporterCount = satisfiedInformedSupporterCount;
    }
    
    public Integer Initiative.getPositiveVotes() {
        return positiveVotes;
    }
    
    public void Initiative.setPositiveVotes(Integer positiveVotes) {
        this.positiveVotes = positiveVotes;
    }
    
    public Integer Initiative.getNegativeVotes() {
        return negativeVotes;
    }
    
    public void Initiative.setNegativeVotes(Integer negativeVotes) {
        this.negativeVotes = negativeVotes;
    }
    
    public Boolean Initiative.getDirectMajority() {
        return directMajority;
    }
    
    public void Initiative.setDirectMajority(Boolean directMajority) {
        this.directMajority = directMajority;
    }
    
    public Boolean Initiative.getIndirectMajority() {
        return indirectMajority;
    }
    
    public void Initiative.setIndirectMajority(Boolean indirectMajority) {
        this.indirectMajority = indirectMajority;
    }
    
    public Integer Initiative.getSchulzeRank() {
        return schulzeRank;
    }
    
    public void Initiative.setSchulzeRank(Integer schulzeRank) {
        this.schulzeRank = schulzeRank;
    }
    
    public Boolean Initiative.getBetterThanStatusQuo() {
        return betterThanStatusQuo;
    }
    
    public void Initiative.setBetterThanStatusQuo(Boolean betterThanStatusQuo) {
        this.betterThanStatusQuo = betterThanStatusQuo;
    }
    
    public Boolean Initiative.getWorseThanStatusQuo() {
        return worseThanStatusQuo;
    }
    
    public void Initiative.setWorseThanStatusQuo(Boolean worseThanStatusQuo) {
        this.worseThanStatusQuo = worseThanStatusQuo;
    }
    
    public Boolean Initiative.getReverseBeatPath() {
        return reverseBeatPath;
    }
    
    public void Initiative.setReverseBeatPath(Boolean reverseBeatPath) {
        this.reverseBeatPath = reverseBeatPath;
    }
    
    public Boolean Initiative.getMultistageMajority() {
        return multistageMajority;
    }
    
    public void Initiative.setMultistageMajority(Boolean multistageMajority) {
        this.multistageMajority = multistageMajority;
    }
    
    public Boolean Initiative.getEligible() {
        return eligible;
    }
    
    public void Initiative.setEligible(Boolean eligible) {
        this.eligible = eligible;
    }
    
    public Boolean Initiative.getWinner() {
        return winner;
    }
    
    public void Initiative.setWinner(Boolean winner) {
        this.winner = winner;
    }
    
    public Integer Initiative.getRank() {
        return rank;
    }
    
    public void Initiative.setRank(Integer rank) {
        this.rank = rank;
    }
    
    public String Initiative.getTextSearchData() {
        return textSearchData;
    }
    
    public void Initiative.setTextSearchData(String textSearchData) {
        this.textSearchData = textSearchData;
    }
    
}
